name: Generate Betting Previews

on:
  schedule:
    # Generate betting previews at 12:00 PM CT (5:00 PM UTC CDT / 6:00 PM UTC CST)
    # Monday and Thursday
    - cron: '0 17 * * 1,4'  # Monday/Thursday 12pm CT (CDT)
    - cron: '0 18 * * 1,4'  # Monday/Thursday 12pm CT (CST) - fallback for standard time
  workflow_dispatch:
    inputs:
      reset_posted_ids:
        description: 'Reset posted_ids.json (for testing)'
        required: false
        default: false
        type: boolean
      reset_betting_ids:
        description: 'Reset only betting preview IDs (keeps other posts)'
        required: false
        default: false
        type: boolean

jobs:
  generate-betting-previews:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: generate-betting-previews-${{ github.ref }}
      cancel-in-progress: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Reset posted_ids.json (if requested)
      if: ${{ inputs.reset_posted_ids == 'true' }}
      run: |
        echo '{"ids": []}' > posted_ids.json
        
    - name: Reset betting preview IDs only (if requested)
      if: ${{ inputs.reset_betting_ids == 'true' }}
      run: |
        echo "üßπ Resetting betting preview IDs only..."
        node -e "
        const fs = require('fs');
        try {
          const data = JSON.parse(fs.readFileSync('posted_ids.json', 'utf8'));
          const originalCount = data.ids ? data.ids.length : 0;
          data.ids = data.ids ? data.ids.filter(id => !id.startsWith('betting_preview_')) : [];
          const removedCount = originalCount - data.ids.length;
          fs.writeFileSync('posted_ids.json', JSON.stringify(data, null, 2));
          console.log(\`‚úÖ Removed \${removedCount} betting preview IDs\`);
          console.log(\`‚úÖ Kept \${data.ids.length} other IDs\`);
        } catch (error) {
          console.error('‚ùå Error resetting betting IDs:', error.message);
          process.exit(1);
        }
        "
        
    - name: Clear existing betting preview posts
      run: |
        echo "üßπ Clearing existing betting preview posts..."
        
        # Create backup of current queue
        cp public/cfb_queue.json public/cfb_queue_backup.json
        
        # Clear only betting preview posts (kind: "betting_preview")
        node -e "
        const fs = require('fs');
        try {
          const data = JSON.parse(fs.readFileSync('public/cfb_queue.json', 'utf8'));
          const originalCount = data.posts ? data.posts.length : 0;
          data.posts = data.posts ? data.posts.filter(post => post.kind !== 'betting_preview') : [];
          const clearedCount = originalCount - data.posts.length;
          fs.writeFileSync('public/cfb_queue.json', JSON.stringify(data, null, 2));
          console.log(\`‚úÖ Cleared \${clearedCount} betting preview posts\`);
        } catch (error) {
          console.error('‚ùå Error clearing betting previews:', error.message);
          process.exit(1);
        }
        "
        
        # Remove backup file
        rm public/cfb_queue_backup.json
        
    - name: Generate betting previews
      run: node scripts/generate_betting_previews_only.mjs
      env:
        CFBD_API_KEY: ${{ secrets.CFBD_API_KEY }}
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "Generate betting previews: $(date -u +%Y-%m-%d_%H-%M-%S)"
        git push
